{"version":3,"sources":["../1167d059fcce93c5e9cf.worker.js","../webpack/bootstrap 1167d059fcce93c5e9cf","Othello/Engine.worker.js","Othello/Engine.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__Engine_js__","self","addEventListener","e","board","data","player","depth","start","performance","now","engine","Engine","bestMove","findMove","end","postMessage","x","y","score","evals","getNumEvals","time","Math","round","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","this","num_evals","square_values","val","availableMoves","moves","isValidMove","push","enemy","done","left","right","up","down","ul","ur","dr","dl","getScore","squares","alpha","arguments","undefined","beta","opponent","getOtherPlayer","evaluate","getAvailableMoves","best","copy","copyBoard","makeMove","counter","max","min","map","a","slice"],"mappings":"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","file":"1167d059fcce93c5e9cf.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/othello-react/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Engine_js__ = __webpack_require__(1);\n\n\nself.addEventListener('message', function (e) {\n    var board = e.data[0];\n    var player = e.data[1];\n    var depth = e.data[2];\n    var start = performance.now();\n    var engine = new __WEBPACK_IMPORTED_MODULE_0__Engine_js__[\"a\" /* default */]();\n    var bestMove = engine.findMove(board, player, depth);\n    var end = performance.now();\n    postMessage({\n        x: bestMove.x,\n        y: bestMove.y,\n        score: bestMove.score,\n        evals: engine.getNumEvals(),\n        time: Math.round(end - start)\n    });\n}, false);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Engine=function(){function Engine(){_classCallCheck(this,Engine);this.num_evals=0;this.square_values=[[10,-1,0,0,0,0,-1,10],[-1,-4,0,0,0,0,-4,-1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[-1,-4,0,0,0,0,-4,-1],[10,-1,0,0,0,0,-1,10]];}_createClass(Engine,[{key:\"getNumEvals\",value:function getNumEvals(){return this.num_evals;}},{key:\"setNumEvals\",value:function setNumEvals(val){this.num_evals=val;}},{key:\"getScore\",value:function getScore(board,player){var score=0;for(var x=0;x<8;x++){for(var y=0;y<8;y++){if(board[x][y]===player){score++;}}}return score;}},{key:\"isAvailableMove\",value:function isAvailableMove(availableMoves,x,y){for(var i=0;i<availableMoves.length;i++){if(availableMoves[i].x===x&&availableMoves[i].y===y){return true;}}return false;}},{key:\"getAvailableMoves\",value:function getAvailableMoves(board,player){var moves=[];for(var x=0;x<8;x++){for(var y=0;y<8;y++){if(this.isValidMove(board,player,x,y)){moves.push({x:x,y:y});}}}return moves;}},{key:\"isValidMove\",value:function isValidMove(board,player,x,y){if(board[x][y]!==0){return false;}var enemy=player===1?2:1;// Left Direction\nif(x>0){if(board[x-1][y]===enemy){for(var i=x-2;i>=0;i--){if(board[i][y]===0){break;}if(board[i][y]===player){return true;}}}}// Right Direction\nif(x<7){if(board[x+1][y]===enemy){for(var _i=x+2;_i<8;_i++){if(board[_i][y]===0){break;}if(board[_i][y]===player){return true;}}}}// Up Direction\nif(y>0){if(board[x][y-1]===enemy){for(var _i2=y-2;_i2>=0;_i2--){if(board[x][_i2]===0){break;}if(board[x][_i2]===player){return true;}}}}// Down Direction\nif(y<7){if(board[x][y+1]===enemy){for(var _i3=y+2;_i3<8;_i3++){if(board[x][_i3]===0){break;}if(board[x][_i3]===player){return true;}}}}// Up-Left Direction\nif(x>0&&y>0){if(board[x-1][y-1]===enemy){for(var _i4=2;_i4<8;_i4++){if(x-_i4<0||y-_i4<0){break;}if(board[x-_i4][y-_i4]===0){break;}if(board[x-_i4][y-_i4]===player){return true;}}}}// Up-Right Direction\nif(x<7&&y>0){if(board[x+1][y-1]===enemy){for(var _i5=2;_i5<8;_i5++){if(x+_i5>7||y-_i5<0){break;}if(board[x+_i5][y-_i5]===0){break;}if(board[x+_i5][y-_i5]===player){return true;}}}}// Down-Right Direction\nif(x<7&&y<7){if(board[x+1][y+1]===enemy){for(var _i6=2;_i6<8;_i6++){if(x+_i6>7||y+_i6>7){break;}if(board[x+_i6][y+_i6]===0){break;}if(board[x+_i6][y+_i6]===player){return true;}}}}// Down-Left Direction\nif(x>0&&y<7){if(board[x-1][y+1]===enemy){for(var _i7=2;_i7<8;_i7++){if(x-_i7<0||y+_i7>7){break;}if(board[x-_i7][y+_i7]===0){break;}if(board[x-_i7][y+_i7]===player){return true;}}}}return false;}},{key:\"makeMove\",value:function makeMove(board,player,x,y){var enemy=player===1?2:1;var done=false;// Left Direction\nvar left=-1;if(x>0){if(board[x-1][y]===enemy){for(var i=x-2;i>=0;i--){if(board[i][y]===0){break;}if(board[i][y]===player){board[x][y]=player;done=true;left=i;break;}}if(left!==-1){for(var _i8=x-1;_i8>left;_i8--){board[_i8][y]=player;}}}}// Right Direction\nvar right=-1;if(x<7){if(board[x+1][y]===enemy){for(var _i9=x+2;_i9<8;_i9++){if(board[_i9][y]===0){break;}if(board[_i9][y]===player){board[x][y]=player;done=true;right=_i9;break;}}if(right!==-1){for(var _i10=x+1;_i10<right;_i10++){board[_i10][y]=player;}}}}// Up Direction\nvar up=-1;if(y>0){if(board[x][y-1]===enemy){for(var _i11=y-2;_i11>=0;_i11--){if(board[x][_i11]===0){break;}if(board[x][_i11]===player){board[x][y]=player;done=true;up=_i11;break;}}if(up!==-1){for(var _i12=y-1;_i12>up;_i12--){board[x][_i12]=player;}}}}// Down Direction\nvar down=-1;if(y<7){if(board[x][y+1]===enemy){for(var _i13=y+2;_i13<8;_i13++){if(board[x][_i13]===0){break;}if(board[x][_i13]===player){board[x][y]=player;done=true;down=_i13;break;}}if(down!==-1){for(var _i14=y+1;_i14<down;_i14++){board[x][_i14]=player;}}}}// Up-Left Direction\nvar ul=-1;if(x>0&&y>0){if(board[x-1][y-1]===enemy){for(var _i15=2;_i15<8;_i15++){if(x-_i15<0||y-_i15<0){break;}if(board[x-_i15][y-_i15]===0){break;}if(board[x-_i15][y-_i15]===player){board[x][y]=player;done=true;ul=_i15;break;}}if(ul!==-1){for(var _i16=1;_i16<ul;_i16++){board[x-_i16][y-_i16]=player;}}}}// Up-Right Direction\nvar ur=-1;if(x<7&&y>0){if(board[x+1][y-1]===enemy){for(var _i17=2;_i17<8;_i17++){if(x+_i17>7||y-_i17<0){break;}if(board[x+_i17][y-_i17]===0){break;}if(board[x+_i17][y-_i17]===player){board[x][y]=player;done=true;ur=_i17;break;}}if(ur!==-1){for(var _i18=1;_i18<ur;_i18++){board[x+_i18][y-_i18]=player;}}}}// Down-Right Direction\nvar dr=-1;if(x<7&&y<7){if(board[x+1][y+1]===enemy){for(var _i19=2;_i19<8;_i19++){if(x+_i19>7||y+_i19>7){break;}if(board[x+_i19][y+_i19]===0){break;}if(board[x+_i19][y+_i19]===player){board[x][y]=player;done=true;dr=_i19;break;}}if(dr!==-1){for(var _i20=1;_i20<dr;_i20++){board[x+_i20][y+_i20]=player;}}}}// Down-Left Direction\nvar dl=-1;if(x>0&&y<7){if(board[x-1][y+1]===enemy){for(var _i21=2;_i21<8;_i21++){if(x-_i21<0||y+_i21>7){break;}if(board[x-_i21][y+_i21]===0){break;}if(board[x-_i21][y+_i21]===player){board[x][y]=player;done=true;dl=_i21;break;}}if(dl!==-1){for(var _i22=1;_i22<dl;_i22++){board[x-_i22][y+_i22]=player;}}}}return done;}},{key:\"getOtherPlayer\",value:function getOtherPlayer(player){return player===1?2:1;}},{key:\"evaluate\",value:function evaluate(board){// Calculate piece count difference\nvar score=this.getScore(board,1)-this.getScore(board,2);// Calculate the reward or penalty of playing a piece into a specific square\nvar squares=0;for(var x=0;x<8;x++){for(var y=0;y<8;y++){if(board[x][y]===1){squares+=this.square_values[x][y];}else if(board[x][y]===1){squares-=this.square_values[x][y];}}}// Return the heuristic evaluation of this position\nreturn score+squares;}},{key:\"findMove\",value:function findMove(board,player,depth){var alpha=arguments.length>3&&arguments[3]!==undefined?arguments[3]:-1000000;var beta=arguments.length>4&&arguments[4]!==undefined?arguments[4]:1000000;this.num_evals++;var opponent=this.getOtherPlayer(player);if(depth<=0){// Evaluation is based solely on piece count\nreturn{score:this.evaluate(board)};}var moves=this.getAvailableMoves(board,player);if(moves.length===0){// Player has no valid moves\nif(this.getAvailableMoves(board,opponent).length===0){// Opponent also has no valid moves, so the game is over\nreturn{score:this.evaluate(board)};}// Find moves for the opponent instead\nreturn this.findMove(board,opponent,depth-1,alpha,beta);}var best={score:player===1?-100000:100000,x:moves[0].x,y:moves[0].y};for(var i=0;i<moves.length;i++){// Make the move on a copy of the board\nvar copy=this.copyBoard(board);this.makeMove(copy,player,moves[i].x,moves[i].y);// Recursively look for a good counter move\nvar counter=this.findMove(copy,opponent,depth-1,alpha,beta);if(player===1){if(counter.score>best.score){best.score=counter.score;best.x=moves[i].x;best.y=moves[i].y;}alpha=Math.max(alpha,counter.score);if(alpha>=beta){break;}}if(player===2){if(counter.score<best.score){best.score=counter.score;best.x=moves[i].x;best.y=moves[i].y;}beta=Math.min(beta,counter.score);if(alpha>=beta){break;}}}return best;}},{key:\"copyBoard\",value:function copyBoard(board){return board.map(function(a){return a.slice();});}},{key:\"toJSON\",value:function toJSON(){return{square_values:this.square_values,findMove:this.findMove};}}]);return Engine;}();/* harmony default export */ __webpack_exports__[\"a\"] = (Engine);\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// 1167d059fcce93c5e9cf.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/othello-react/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1167d059fcce93c5e9cf","import Engine from './Engine.js'\r\n\r\nself.addEventListener('message', function(e) {\r\n    var board = e.data[0];\r\n    var player = e.data[1];\r\n    var depth = e.data[2];\r\n    var start = performance.now()\r\n    var engine = new Engine();\r\n    var bestMove = engine.findMove(board, player, depth);\r\n    var end = performance.now()\r\n    postMessage({\r\n        x: bestMove.x,\r\n        y: bestMove.y,\r\n        score: bestMove.score,\r\n        evals: engine.getNumEvals(),\r\n        time: Math.round(end - start)\r\n    });\r\n}, false);\n\n\n// WEBPACK FOOTER //\n// ./src/Othello/Engine.worker.js","export default class Engine {\r\n\r\n    constructor() {\r\n        this.num_evals = 0;\r\n        this.square_values = [\r\n            [  10,  -1,   0,   0,   0,   0,  -1,  10],\r\n            [  -1,  -4,   0,   0,   0,   0,  -4,  -1],\r\n            [   0,   0,   0,   0,   0,   0,   0,   0],\r\n            [   0,   0,   0,   0,   0,   0,   0,   0],\r\n            [   0,   0,   0,   0,   0,   0,   0,   0],\r\n            [   0,   0,   0,   0,   0,   0,   0,   0],\r\n            [  -1,  -4,   0,   0,   0,   0,  -4,  -1],\r\n            [  10,  -1,   0,   0,   0,   0,  -1,  10]\r\n        ];\r\n    }\r\n\r\n    getNumEvals() {\r\n        return this.num_evals;\r\n    }\r\n\r\n    setNumEvals(val) {\r\n        this.num_evals = val;\r\n    }\r\n\r\n    getScore(board, player) {\r\n        var score = 0;\r\n        for (var x = 0; x < 8; x++) {\r\n            for (var y = 0; y < 8; y++) {\r\n                if (board[x][y] === player) {\r\n                    score ++;\r\n                }\r\n            }\r\n        }    \r\n        return score;\r\n    }\r\n\r\n    isAvailableMove(availableMoves, x, y) {\r\n        for (var i = 0; i < availableMoves.length; i++) {\r\n            if (availableMoves[i].x === x && availableMoves[i].y === y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n        \r\n    getAvailableMoves(board, player) {\r\n        var moves = [];\r\n        for (var x = 0; x < 8; x++) {\r\n            for (var y = 0; y < 8; y++) {\r\n                if (this.isValidMove(board, player, x, y)) {\r\n                    moves.push({ x: x, y: y});\r\n                }\r\n            }\r\n        }    \r\n        return moves;\r\n    }\r\n\r\n    isValidMove(board, player, x, y) {\r\n        if (board[x][y] !== 0) {\r\n            return false;\r\n        }\r\n\r\n        var enemy = player === 1 ? 2 : 1;\r\n\r\n        // Left Direction\r\n        if (x > 0) {\r\n            if (board[x - 1][y] === enemy) {\r\n                for (let i = x - 2; i >= 0; i--) {\r\n                    if (board[i][y] === 0) {\r\n                        break;\r\n                    }\r\n                    if (board[i][y] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Right Direction\r\n        if (x < 7) {\r\n            if (board[x + 1][y] === enemy) {\r\n                for (let i = x + 2; i < 8; i++) {\r\n                    if (board[i][y] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[i][y] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Up Direction\r\n        if (y > 0) {\r\n            if (board[x][y - 1] === enemy) {\r\n                for (let i = y - 2; i >= 0; i--) {\r\n                    if (board[x][i] === 0) {\r\n                        break;\r\n                    }                        \r\n                    if (board[x][i] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Down Direction\r\n        if (y < 7) {\r\n            if (board[x][y + 1] === enemy) {\r\n                for (let i = y + 2; i < 8; i++) {\r\n                    if (board[x][i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x][i] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Up-Left Direction\r\n        if (x > 0 && y > 0) {\r\n            if (board[x - 1][y - 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x - i < 0 || y - i < 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y - i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y - i] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Up-Right Direction\r\n        if (x < 7 && y > 0) {\r\n            if (board[x + 1][y - 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x + i > 7 || y - i < 0) {\r\n                        break;\r\n                    }\r\n                    if (board[x + i][y - i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y - i] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Down-Right Direction\r\n        if (x < 7 && y < 7) {\r\n            if (board[x + 1][y + 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x + i > 7 || y + i > 7) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y + i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y + i] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Down-Left Direction\r\n        if (x > 0 && y < 7) {\r\n            if (board[x - 1][y + 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x - i < 0 || y + i > 7) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y + i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y + i] === player) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    makeMove(board, player, x, y) {        \r\n        var enemy = player === 1 ? 2 : 1;\r\n        var done = false;\r\n\r\n        // Left Direction\r\n        let left = -1;\r\n        if (x > 0) {\r\n            if (board[x - 1][y] === enemy) {\r\n                for (let i = x - 2; i >= 0; i--) {\r\n                    if (board[i][y] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[i][y] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        left = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (left !== -1) {\r\n                    for (let i = x - 1; i > left; i--) {\r\n                        board[i][y] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Right Direction\r\n        let right = -1;\r\n        if (x < 7) {\r\n            if (board[x + 1][y] === enemy) {\r\n                for (let i = x + 2; i < 8; i++) {\r\n                    if (board[i][y] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[i][y] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        right = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (right !== -1) {\r\n                    for (let i = x + 1; i < right; i++) {\r\n                        board[i][y] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Up Direction\r\n        let up = -1;\r\n        if (y > 0) {\r\n            if (board[x][y - 1] === enemy) {\r\n                for (let i = y - 2; i >= 0; i--) {\r\n                    if (board[x][i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x][i] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        up = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (up !== -1) {\r\n                    for (let i = y - 1; i > up; i--) {\r\n                        board[x][i] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Down Direction\r\n        let down = -1;\r\n        if (y < 7) {\r\n            if (board[x][y + 1] === enemy) {\r\n                for (let i = y + 2; i < 8; i++) {\r\n                    if (board[x][i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x][i] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        down = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (down !== -1) {\r\n                    for (let i = y + 1; i < down; i++) {\r\n                        board[x][i] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Up-Left Direction\r\n        let ul = -1;\r\n        if (x > 0 && y > 0) {\r\n            if (board[x - 1][y - 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x - i < 0 || y - i < 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y - i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y - i] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        ul = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (ul !== -1) {\r\n                    for (let i = 1; i < ul; i++) {\r\n                        board[x - i][y - i] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Up-Right Direction\r\n        let ur = -1;\r\n        if (x < 7 && y > 0) {\r\n            if (board[x + 1][y - 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x + i > 7 || y - i < 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y - i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y - i] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        ur = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (ur !== -1) {\r\n                    for (let i = 1; i < ur; i++) {\r\n                        board[x + i][y - i] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Down-Right Direction\r\n        let dr = -1;\r\n        if (x < 7 && y < 7) {\r\n            if (board[x + 1][y + 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x + i > 7 || y + i > 7) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y + i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x + i][y + i] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        dr = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (dr !== -1) {\r\n                    for (let i = 1; i < dr; i++) {\r\n                        board[x + i][y + i] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Down-Left Direction\r\n        let dl = -1;\r\n        if (x > 0 && y < 7) {\r\n            if (board[x - 1][y + 1] === enemy) {\r\n                for (let i = 2; i < 8; i++) {\r\n                    if (x - i < 0 || y + i > 7) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y + i] === 0) {\r\n                        break;\r\n                    }    \r\n                    if (board[x - i][y + i] === player) {\r\n                        board[x][y] = player;\r\n                        done = true;\r\n                        dl = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (dl !== -1) {\r\n                    for (let i = 1; i < dl; i++) {\r\n                        board[x - i][y + i] = player;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return done;\r\n    }\r\n\r\n    getOtherPlayer(player) {\r\n        return player === 1 ? 2 : 1;\r\n    }\r\n\r\n    evaluate(board) {\r\n        // Calculate piece count difference\r\n        var score = this.getScore(board, 1) - this.getScore(board, 2);\r\n        \r\n        // Calculate the reward or penalty of playing a piece into a specific square\r\n        var squares = 0;\r\n        for (var x = 0; x < 8; x++) {\r\n            for (var y = 0; y < 8; y++) {\r\n                if (board[x][y] === 1) {\r\n                    squares += this.square_values[x][y];\r\n                }\r\n                else if (board[x][y] === 1) {\r\n                    squares -= this.square_values[x][y];\r\n                }\r\n            }\r\n        }   \r\n        \r\n        // Return the heuristic evaluation of this position\r\n        return score + squares;\r\n    }\r\n\r\n    findMove(board, player, depth, alpha = -1000000, beta = 1000000) {\r\n        this.num_evals++;\r\n        var opponent = this.getOtherPlayer(player);\r\n        if (depth <= 0) {\r\n            // Evaluation is based solely on piece count\r\n            return { score: this.evaluate(board) };\r\n        }\r\n        \r\n        var moves = this.getAvailableMoves(board, player);\r\n        if (moves.length === 0) {\r\n            // Player has no valid moves\r\n            if (this.getAvailableMoves(board, opponent).length === 0) {\r\n                // Opponent also has no valid moves, so the game is over\r\n                return { score: this.evaluate(board) };\r\n            }\r\n            \r\n            // Find moves for the opponent instead\r\n            return this.findMove(board, opponent, depth - 1, alpha, beta);\r\n        }\r\n        \r\n        var best = { score: player === 1 ? -100000 : 100000, x: moves[0].x, y: moves[0].y };\r\n        for (let i = 0; i < moves.length; i++) {\r\n            // Make the move on a copy of the board\r\n            var copy = this.copyBoard(board);\r\n            this.makeMove(copy, player, moves[i].x, moves[i].y);\r\n            \r\n            // Recursively look for a good counter move\r\n            var counter = this.findMove(copy, opponent, depth - 1, alpha, beta);\r\n            if (player === 1) {\r\n                if (counter.score > best.score) {\r\n                    best.score = counter.score;\r\n                    best.x = moves[i].x;\r\n                    best.y = moves[i].y;\r\n                }\r\n                alpha = Math.max(alpha, counter.score);\r\n                if (alpha >= beta) {\r\n                    break;\r\n                }\r\n            }\r\n            if (player === 2) {\r\n                if (counter.score < best.score) {\r\n                    best.score = counter.score;\r\n                    best.x = moves[i].x;\r\n                    best.y = moves[i].y;\r\n                }\r\n                beta = Math.min(beta, counter.score);\r\n                if (alpha >= beta) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return best;\r\n    }\r\n\r\n    copyBoard(board) {\r\n        return board.map(function(a) {\r\n            return a.slice();\r\n        });\r\n    }\r\n    \r\n    toJSON() {\r\n        return { \r\n            square_values: this.square_values, \r\n            findMove: this.findMove\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Othello/Engine.js"],"sourceRoot":""}